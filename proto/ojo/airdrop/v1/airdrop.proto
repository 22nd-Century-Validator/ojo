syntax = "proto3";
package ojo.airdrop.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/ojo-network/ojo/x/airdrop/types";

option (gogoproto.goproto_getters_all) = false;

// Params defines the parameters for the airdrop module.
message Params {
  // The block at which all unclaimed AirdropAccounts will instead mint tokens
  // into the community pool. After this block, all unclaimed airdrop accounts
  // will no longer be able to be claimed.
  uint64 expiry_block = 1;

  // The percentage of the initial airdrop that users must delegate in order to
  // receive their second portion.
  // E.g., if we want to require users to stake their entire initial airdrop, this will be 1.
  // cosmos.base.v1beta1.Dec delegation_requirement = 1;
  string delegation_requirement = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  
  // The multiplier for the amount of tokens users will receive once they claim their airdrop.
  // E.g., if we want users to receive an equal second half, this will be 2.
  string airdrop_factor = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
}

// AirDropAccount defines an account that was created at genesis with an initial airdrop.
message AirdropAccount {
  int64 vesting_end_time = 1;

  // The address of the account that was created at genesis with the initial airdrop.
  string origin_address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The amount of tokens that were airdropped to the genesis account.
  uint64 origin_amount = 3;

  // The current state of the airdrop account
  enum State {
    STATE_UNSPECIFIED = 0;
  
    // The KV store entry has been created but initial tokens have not been allocated
    STATE_CREATED = 1;

    // The initial airdrop has been distributed but the 2nd half is unclaimed
    STATE_UNCLAIMED = 2;

    // The 2nd half of the airdrop has been distributed
    STATE_CLAIMED = 3;
  }
  State state = 4;

  // The address of the account that the user has claimed the 2nd half of their airdrop to.
  string claim_address = 5 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The amount of tokens claimed in the 2nd half of the airdrop.
  uint64 claim_amount = 6;
}
